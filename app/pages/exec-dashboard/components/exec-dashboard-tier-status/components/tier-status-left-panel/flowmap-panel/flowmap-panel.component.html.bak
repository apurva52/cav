<!-- <p-dropdown [options]="flow
    mapList" (onChange)="openOnlineCopyFlowMap()" [(ngModel)]="selectedFlowMap"></p-dropdown> -->
    <app-flowchart></app-flowchart>
    <p-contextMenu #ctrlMenu class="contextClass" [global]="false" (onContextMenuSelect)="randomVariable($event)" [model]="drillDownItems"></p-contextMenu>
    <!-- Random variable -->
    <!-- <button (click)="configFlowMap()">Configure Flowmap</button>
    <button (click)="groupTier()">Group Tier</button>
    <button (click)="fillUnGroupDialog()">UnGroup Tier</button> -->
    
    <!-- <button (click)="showOnlyTierFlowMap()">Show Flowmap for selected Tier</button> -->
    <!-- <button (click)="showFullFlowmap()">Show Full Flowmap</button> -->
    <!-- <button (click)="openTierInfo()">Show Tier Info</button> -->
    <!-- <button (click)="saveAsFlowMap()">Save As Flowmap</button> -->
    <!-- <button (click)="renameIP()">Rename IP </button> -->
    <!-- <button (click)="drillDownIps()"> Drilldown (IP)</button> -->
    
    <p-dialog modal="modal" class="scenmodal" [header]="groupDialogHeader" [(visible)]="groupTierToggle" [width]="800">
        <div class="ui-grid ui-grid-responsive ui-grid-pad ui-fluid">
            <span *ngIf="groupDialogHeader === 'Add New Group'">
                <div class="ui-grid-row" *ngIf="groupList.length != 0">
                    <div class="ui-grid-col-3">
                        Add Into Existing Group:
                    </div>
                    <div class="ui-grid-col-4">
                        <p-dropdown [options]="groupList" appendTo="body" [(ngModel)]="selectedTierGroup" placeholder="Select a Group" [style]="{'width': '100%'}"></p-dropdown>
                    </div>
                </div>
                <div class="ui-grid-row">
                    <div class="ui-grid-col-1">
                        <p-checkbox name="isCreateGrp" binary="true" [(ngModel)]="isCreateGrp"></p-checkbox>
                    </div>
                    <div class="ui-grid-col-3">
                        Create New Group
                    </div>
                </div>
                <div class="ui-grid-row" *ngIf="isCreateGrp">
                    <div class="ui-grid-col-2">
                        Group Name
                    </div>
                    <div class="ui-grid-col-6">
                        <input pInputText type="text" placeholder="Enter Group Name" [(ngModel)]="newGrpName" />
                    </div>
                </div>
            </span>
            <span *ngIf="groupDialogHeader === 'UnGroup Tier(s)'">
                <div class="ui-grid-row" *ngIf="groupList.length != 0">
                    <div class="ui-grid-col-3">
                        Group Name: {{_dataHandlerService.$selectedMenuNode}}
                    </div>
                </div>
            </span>
	    <br>
            <p-pickList *ngIf="groupTierToggle && (isCreateGrp || groupDialogHeader === 'UnGroup Tier(s)')" [responsive]="true" [source]="tiersList"
                [target]="unGroupTiersList" [sourceHeader]="sourceHeader" [targetHeader]="targetHeader"
                [showSourceControls]="false" [showTargetControls]="false" filterBy="id">
                <ng-template let-item pTemplate="item">
                    <div class="ui-helper-clearfix">
                        {{item.id}}
                    </div>
                </ng-template>
            </p-pickList>
        </div>
        <p-footer>
            <button type="button" pButton icon="pi pi-check" *ngIf="groupDialogHeader === 'Add New Group'" (click)="createNewGroup()"
                label="Save"></button>
            <button type="button" pButton icon="pi pi-check" *ngIf="groupDialogHeader === 'UnGroup Tier(s)'" (click)="unGroupTier()"
                label="Save"></button>
            <button type="button" pButton icon="pi pi-close" (click)="groupTierToggle=false" label="Cancel"></button>
        </p-footer>
    </p-dialog>
    
    
                                        
    
        
        
    
    
    <p-dialog modal="modal" class="scenmodal" header="Copy Flowmap" [(visible)]="_dataHandlerService.$saveAsFlowmap" [width]="400">
            <form (ngSubmit)="saveFlowmap('saveAs');_dataHandlerService.$saveAsFlowmap=false" #groupForm="ngForm" ngNativeValidate>
            <div class="ui-g">
                <div class="ui-g-6">
                    Enter Name for new Flowmap
                </div>
                <div class="ui-g-6">
                    <input pInputText type="text" name="newFlowmapName" [(ngModel)]="newFlowmapName" pattern="[_a-zA-Z0-9]+[a-zA-Z0-9_]*" (keydown.space)="$event.preventDefault()" required ngModel/>
                </div>
            </div>
        <div class="ui-g" style="float: right">
            <button type="submit" pButton icon="pi pi-check" label="Save"></button>
            <button type="button" pButton icon="fa fa-times" (click)="_dataHandlerService.$saveAsFlowmap=false" label="Cancel"></button>
        </div>
        </form>
    </p-dialog>
   
      <p-dialog modal="modal" class="scenmodal  Ddr-popup-footer" header="Search By Response Time"
          [(visible)]="_dataHandlerService.$showResponseDialog" [responsive]='true' [resizable]='false'
          [positionTop]='250' [width]="400" [minHeight]='120'>        
	<div class="ui-grid ui-grid-responsive ui-grid-pad ui-fluid">
            <div class="ui-grid-row">
                <div class="ui-grid-col-5">
                    Response Time(ms) >=
                </div>
                <div class="ui-grid-col-5">
                    <input pInputText id="input" (keypress)="validateQty($event)" type="text" size="5" placeholder="Response Time(ms)"
                        [(ngModel)]="responseTime" maxlength="7"/>
                </div>
            </div>
        </div>
        <p-footer>
            <button pButton type="button" pButton icon="pi pi-check" label="Apply"
                class="ui-button-rounded ui-button-success" (click)="openFlowpathIPByResp(responseTime)"></button>
            <button type="button" pButton icon="fa fa-times"
                (click)="_dataHandlerService.$showResponseDialog=false; responseTime=''" label="Close"></button>
        </p-footer>
    </p-dialog>
      
    <p-dialog modal="modal" class="scenmodal" header="Copy Flowmap" [(visible)]="copyFlowmapToggle" [width]="400">
        <div class="ui-grid ui-grid-responsive ui-grid-pad ui-fluid">
            <div class="ui-grid-row">
                <div class="ui-grid-col-3">
                    <p-checkbox name="isCreateGrp" binary="true" [(ngModel)]="isCreateGrp"></p-checkbox>
                </div>
                <div class="ui-grid-col-3">
                    <p-checkbox name="isCreateGrp" binary="true" [(ngModel)]="isCreateGrp"></p-checkbox>
                </div>
            </div>
        </div>
        <p-footer>
            <button type="button" pButton icon="pi pi-check" (click)="copyFlowmap()" label="Save"></button>
            <button type="button" pButton icon="pi pi-close" (click)="copyFlowmapToggle=false" label="Cancel"></button>
        </p-footer>
    </p-dialog>
    
    <p-dialog modal="modal" class="scenmodal" (onShow)="onConfigureFlowMapShow()" header="Configure Flow Map" [(visible)]="_dataHandlerService.$editFlowmapToggle" [width]="600">
	<form (ngSubmit)="applyFilterOnFlowmap()" #groupForm="ngForm" ngNativeValidate>
        <div class="ui-grid ui-grid-responsive ui-grid-pad ui-fluid" *ngIf="_dataHandlerService.$editFlowmapToggle">
            <div class="ui-g borderClass" style="margin-bottom:10px">
                <div class="ui-g-12" style="padding: 3px">
                    <div class="ui-g-6" style="margin-left: -3px;padding:3px">
                        <span [ngClass]="{ 'disabledClass' : !_dataHandlerService.checkOwner(_dataHandlerService.$selectedFlowmap)}">
                            <p-checkbox binary="useLocalRenaming" name="rename" value="useLocalRenaming" 
                            label="Use Local Renaming of Integration Points" [(ngModel)]="useLocalRenaming">
                            </p-checkbox>
                        </span>
                    </div>
                    <div class="ui-g-6" style="padding: 3px">
                        <span [ngClass]="{ 'disabledClass' : !_dataHandlerService.checkOwner(_dataHandlerService.$selectedFlowmap)}">
                            <p-checkbox value="this._tsCommonHandler.$_isFullFlowPath" name="isFullFlowPath" label="Show Flowpath upto n level on double click"
                                [(ngModel)]="this._tsCommonHandler.$_isFullFlowPath" binary="this._tsCommonHandler.$_isFullFlowPath">
                            </p-checkbox>
                        </span>
                    </div>
                </div>
                <div class="ui-g-12" style="padding: 3px">
                    <span [ngClass]="{ 'disabledClass' : !_dataHandlerService.checkOwner(_dataHandlerService.$selectedFlowmap)}">
                        <p-checkbox binary="showIPwith0Calls" name="showIP" value="showIPwith0Calls" label="Show Integration Point with 0 Calls"
                            [(ngModel)]="showIPwith0Calls">
                        </p-checkbox>
                    </span>
                </div>
            </div>
            <div class="ui-g borderClass" style="margin-bottom:10px">
                <div class="ui-g-12" style="padding: 3px">
                    <div class="ui-g-4" style="padding: 3px">
                        <p-checkbox binary="enableTPSCheck" value="enableTPSCheck" name="tpscheck"
                            label="Transaction per Second" [(ngModel)]="enableTPSCheck"></p-checkbox>
                    </div>
                    <div class="ui-g-2" style="padding: 3px">
                        <p-dropdown [disabled]="enableTPSCheck == false" [options]="symbolList" name="tps1"
                            placeholder="Select" [(ngModel)]="drpTps" [style]="{'width': '100%'}"></p-dropdown>
                    </div>
                    <div class="ui-g-2" style="padding: 3px">
                        <input [disabled]="enableTPSCheck == false" pInputText type="text" name="tpsVal"
                            validateFor="number" [(ngModel)]="configTps" />
                    </div>
                </div>
                <div class="ui-g-12" style="padding: 3px">
                    <div class="ui-g-4" style="padding: 3px">
                        <p-checkbox binary="enableResponseCheck" value="enableResponseCheck" name="enableresp"
                            label="Response Time" [(ngModel)]="enableResponseCheck"></p-checkbox>
                    </div>
                    <div class="ui-g-2" style="padding: 3px">
                        <p-dropdown [disabled]="enableResponseCheck == false" [options]="symbolList" name="enableResp"
                            placeholder="Select" [(ngModel)]="drpRes" [style]="{'width': '100%'}"></p-dropdown>
                    </div>
                    <div class="ui-g-2" style="padding: 3px">
                        <input [disabled]="enableResponseCheck == false" pInputText type="text" name="enablerespval"
                            validateFor="number" [(ngModel)]="configRes" />
                    </div>
                    <div class="ui-g-2" style="padding: 3px"> ms</div>
                </div>
                <div class="ui-g-12" style="padding: 3px">
                    <div class="ui-g-4" style="padding: 3px">
                        <p-checkbox value="enableCPUCheck" binary="enableCPUCheck" name="cpu"
                            label="CPU Utilization" [(ngModel)]="enableCPUCheck"></p-checkbox>
                    </div>
                    <div class="ui-g-2" style="padding: 3px">
                        <p-dropdown [disabled]="enableCPUCheck == false" [options]="symbolList" name="cpu1"
                            placeholder="Select" [(ngModel)]="drpCpu" [style]="{'width': '100%'}"></p-dropdown>
                    </div>
                    <div class="ui-g-2" style="padding: 3px">
                        <input [disabled]="enableCPUCheck ==false" pInputText type="text" name="cpuval"
                            validateFor="number" [(ngModel)]="configCpu" />
                    </div>
                    <div class="ui-g-1" style="padding: 3px"> %</div>
                </div>
                <div class="ui-g-12" style="padding: 3px;margin-left:3px">
                    <p-checkbox binary="enableApplyToIPCheck" value="enableApplyToIPCheck" name="ipcheck"
                        label="Apply these settings on Integration Point also" [(ngModel)]="enableApplyToIPCheck"></p-checkbox>
                </div>
            </div>
        <div class="ui-g borderClass" style="margin-bottom:10px">
            <div class="ui-g-12" style="padding: 3px">
                <div class="ui-g-3" style="padding: 3px">Show Call Details per </div>
                <div class="ui-g-2" style="padding: 3px">
                    <p-radioButton name="cps" value="seconds" label="seconds" [(ngModel)]="this._tsCommonHandler.callsUnit" >
                    </p-radioButton>
                </div>
                <div class="ui-g-2" style="padding: 3px">
                    <p-radioButton name="cps" value="minutes" label="minutes" [(ngModel)]="this._tsCommonHandler.callsUnit">
                    </p-radioButton>
                </div>
            </div>
            <div class="ui-g-12" style="padding: 3px">
                <div class="ui-g-6" style="margin-right: -43px;margin-top: 3px;padding:3px">
                    Show Integration Point names in Flowmap upto
                </div>
                <div class="ui-g-2" style="padding: 3px">
                    <input type="number" name="characters" min="15" max="100" (keypress)="rangeValidation($event)" style="width: 100%" [(ngModel)]="this._tsCommonHandler.labelCharacters" pInputText />
                </div>
                <div class="ui-g-2" style="padding: 3px">characters</div>
            </div>
        </div>
            <div class="ui-g" style="padding: 3px">
                <div class="ui-g-12" style="padding: 3px">
                    <p-checkbox value="showOrHideTiersCheck" label="Show only specified Tiers / Integration Points" name="tiers"
                        [(ngModel)]="showOrHideTiersCheck" binary="showOrHideTiersCheck"></p-checkbox>
                </div>
            </div>
            <div *ngIf="showOrHideTiersCheck" class="ui-g" style="margin-bottom:10px;padding:3px">
                <div class="ui-g-12" style="padding: 3px">
		     <p-pickList [responsive]="true" [metaKeySelection]="false" [showTargetControls]="false"
                        [showSourceControls]="false" [source]="this.hiddenTiers" [target]="this.visibleTiers" 
                        sourceHeader="Hidden Tiers / Integration Points" targetHeader="Visible Tiers / Integration Points" 
                        class="config-ts-picklist" filterBy="node.id">
                        <ng-template let-item pTemplate="item">
                            <div class="ui-helper-clearfix">
                                {{item.node.id}}
                            </div>
                        </ng-template>
                    </p-pickList>
                </div>
            </div>
        </div>
        <p-footer style="float:right;">
            <button type="submit" pButton icon="pi pi-check" (click)="applyFilterOnFlowmap()" label="Apply"></button>
            <button type="button" pButton icon="pi pi-times" (click)="_dataHandlerService.$editFlowmapToggle = false" label="Cancel"></button>
        </p-footer>
	</form>
    </p-dialog>
   
    <p-dialog modal="modal" class="scenmodal" header="Rename Integration Point" (onShow)="newGrpName = ''" [(visible)]="renameIPToggle" [width]="450">
        <div class="ui-grid ui-grid-responsive ui-grid-pad ui-fluid">
            <div class="ui-g borderClass" style="margin-bottom:10px">
                <div class="ui-g-12">
                    Actual Name: {{_dataHandlerService.$selectedMenuActualNameNode}}
                </div>
                <div class="ui-g-12">
                    Old Name: {{_dataHandlerService.$selectedMenuNode}}
                </div>
                <div class="ui-g-12">
                    <div class="ui-g-3">
                        New Name:
                    </div>
                    <div class="ui-g-9" style="margin-left:-31px">
                        <input pInputText type="text" [(ngModel)]="newGrpName" />
                    </div>
                </div>
            </div>
        </div>
        <p-footer>
            <button type="button" pButton icon="pi pi-check" (click)="renameIPoint(_dataHandlerService.$selectedMenuActualNameNode, newGrpName)" label="Save"></button>
            <button type="button" pButton icon="fa fa-times" (click)="renameIPToggle=false" label="Cancel"></button>
        </p-footer>
    </p-dialog>


    <!-- Drill down options in Ips -->
    <p-dialog modal="modal" class="scenmodal" header="Call Details" [(visible)]="showIpDialog" [width]="800">
        <div class="ui-grid ui-grid-responsive ui-grid-pad ui-fluid">
        <button pButton type="button" pTooltip="Apply filters" (click)="showFilters()"
        icon="fa fa-filter" class="ui-button-success" style="width: 25px;margin-left: 97%;"></button>
            <div class="">
                <p-dataTable [value]="tableArr" class="randomClass" [responsive]="true" #dt>
                    <!-- <p-header>Application stats</p-header>  -->
                    <p-column field="from" header="From" [style]="{'width': '40%','white-space': 'nowrap','text-overflow':'ellipsis'}" [sortable]="true" [filter]="isfilter">
                        <ng-template pTemplate="header">
                            <span>
                                <!-- <img src="./images/icon.jpg" style="width:16px;"> -->
                                <span class="">From</span>
                            </span>
                        </ng-template>
                        <ng-template pTemplate="body" let-col let-appInfo="rowData">
                            <span [title]="appInfo[col.field]">
                                {{appInfo[col.field]}}</span>
                        </ng-template>
                    </p-column>
                    <p-column field="to" header="To" [style]="{'width': '40%', 'text-align': 'center','white-space': 'nowrap','text-overflow':'ellipsis'}" [sortable]="true" [filter]="isfilter">
                        <ng-template pTemplate="header">
                            <span>
                                <!-- <img src="./images/page_legend.png" alt="apps"> -->
                                <span class="">To</span>
                            </span>
                        </ng-template>
                        <ng-template pTemplate="body" let-col let-appInfo="rowData">
                            <span [title]="appInfo[col.field]">
                                {{appInfo[col.field]}}</span>
                        </ng-template>
                    </p-column>
                    <!-- <p-column field="response" header="Response Time" [styleClass]="response" [style]="{'width': '36%', 'text-align': 'right'}"> -->
                    <p-column field="response" header="Response Time" [style]="{'width': '35%', 'text-align': 'right'}" [sortable]="true" [filter]="isfilter">
                        <ng-template pTemplate="header">
                            <span>
                                <!-- <img src="./images/response_legend.png" alt="apps"> -->
                                <span class="">Response Time (ms)</span>
                            </span>
    
                        </ng-template>
                        <ng-template pTemplate="body" let-col let-appInfo="rowData">
                            {{appInfo[col.field] < 0 ? '-' : appInfo[col.field]}}
                        </ng-template>
                    </p-column>
                    <p-column field="cps" header="Error(%)" [style]="{'width': '22%', 'text-align': 'right'}" sortable="custom" (sortFunction)="customSort($event, dt)" [filter]="isfilter" #clm>
                        <ng-template pTemplate="header">
                            <span>
                                <!-- <img src="./images/cpu_legend.png" alt="apps"> -->
                                <span class="">{{cUnit}}</span>
                            </span>
                        </ng-template>
                        <ng-template pTemplate="body" let-col let-appInfo="rowData">
                            {{appInfo[col.field] < 0 ? '-' : appInfo[col.field] < 1 ? (+appInfo[col.field]).toFixed(3): (appInfo[col.field] | round) }}
                        </ng-template>
                    </p-column>
                    <p-column field="count" header="Count" [style]="{'width': '22%', 'text-align': 'right'}" [sortable]="true" [filter]="isfilter">
                        <ng-template pTemplate="header">
                            <span>
                                <!-- <img src="./images/cpu_legend.png" alt="apps"> -->
                                <span class="">Count</span>
                            </span>
                        </ng-template>
                        <ng-template pTemplate="body" let-col let-appInfo="rowData">
                            {{appInfo[col.field] < 0 ? '-' : appInfo[col.field] | round}}
                        </ng-template>
                    </p-column>
                    <p-column field="error" header="Error(%)" [style]="{'width': '22%', 'text-align': 'right'}" [sortable]="true" [filter]="isfilter">
                        <ng-template pTemplate="header">
                            <span>
                                <!-- <img src="./images/cpu_legend.png" alt="apps"> -->
                                <span class="">Errors</span>
                            </span>
                        </ng-template>
                        <ng-template pTemplate="body" let-col let-appInfo="rowData">
                            {{appInfo[col.field] < 0 ? '-' : appInfo[col.field] | round}}
                        </ng-template>
                    </p-column>
                    <p-column field="eps" header="Error(%)" [style]="{'width': '22%', 'text-align': 'right'}" [sortable]="true" [filter]="isfilter">
                        <ng-template pTemplate="header">
                            <span>
                                <!-- <img src="./images/cpu_legend.png" alt="apps"> -->
                                <span class="">Errors/Sec</span>
                            </span>
                        </ng-template>
                        <ng-template pTemplate="body" let-col let-appInfo="rowData">
				{{appInfo[col.field] | number : '1.3-3'}}
                        </ng-template>
                    </p-column>
                </p-dataTable>
            <div class="ui-g-12">
                
                <div class="ui-g-12"><b>Download As: </b></div>
                <div class="ui-g-1" style="margin-left: -10px;">
                    <button pButton type="button" pTooltip="Click to download PDF Report" (click)="onDownload('pdf')"
                        icon="fa fa-file-pdf-o" class="ui-button-success"></button>
                </div>
                <div class="ui-g-1" style="margin-left: -10px;">
                    <button pButton type="button" pTooltip="Click to download Excel Report"
                        (click)="onDownload('excel')" icon="fa fa-file-excel-o" class="ui-button-warning"></button>
                </div>
                <div class="ui-g-1" style="margin-left: -10px;">
                    <button pButton type="button" pTooltip="Click to download Word Report" (click)="onDownload('word')"
                        icon="fa fa-file-word-o" class="ui-button-info"></button>
                </div>

            </div>
            </div>
    
        </div>
        <p-footer>
            <!-- <button type="button" pButton icon="pi pi-check" (click)="createNewGroup()" label="Save"></button> -->
            <button type="button" pButton icon="pi pi-times" (click)="showIpDialog=false" label="Close"></button>
        </p-footer>
    </p-dialog>
    <!-- For save flowmap -->
    <p-dialog modal="modal" class="scenmodal" header="Save {{_dataHandlerService.$selectedFlowmap}} FlowMap?" [(visible)]="_dataHandlerService.$saveFlowmap"
        [width]="300">
        <p-footer>
            <button type="button" pButton icon="pi pi-check" (click)="copyFlowmap('save');_dataHandlerService.$saveFlowmap=false"
                label="Save"></button>
            <button type="button" pButton icon="fa fa-times" (click)="_dataHandlerService.$saveFlowmap=false" label="Cancel"></button>
        </p-footer>
    </p-dialog>
    
    <!-- // [style]="{'width':'18%'}" -->
    <div #overlay class="top10Transactions">
        <div (click)="closeOverLay($event)" style="cursor:pointer"><i class="fa fa-close"></i></div>
        <p-table [value]="BTtableArr" class="tsTopTable" [scrollable]="true" scrollHeight="80px">
            <!-- <p-header>Application stats</p-header>  -->
            <!-- <p-column [field]="objectKeys.btname" header="To 10 Transactions" [style]=" {'width': '18vh'}">
                <ng-template pTemplate="header">
                   <span>
                        <img src="./images/icon.jpg" style="width:16px;">
                        <span class="">Top 10 {{typeStr}}</span>
                    </span>
                </ng-template>
                <ng-template pTemplate="body" let-col let-appInfo="rowData">
                    <span [title]="appInfo[col.field]" style="cursor:pointer; color:#995088" (click)='showBTDialoge(appInfo)'>
                        {{appInfo[col.field]}}</span>
                </ng-template>
            </p-column>
            <p-column [field]="objectKeys.tps" header="TPS" [style]=" {'width': '8vh'}">
                <ng-template pTemplate="header">
                    <span>
                        <img src="./images/page_legend.png" alt="apps">
                        <span class="">TPS</span>
                    </span>
                </ng-template>
                <ng-template pTemplate="body" let-col let-appInfo="rowData">
                 {{getCommaSeparatedString(appInfo[col.field])}}
		</ng-template>
            </p-column>
            <p-column [field]="objectKeys.avg" header="Avg Response Time" [style]=" {'width': '8vh'}">
                <ng-template pTemplate="header">
                    <span>
                        <img src="./images/response_legend.png" alt="apps">
                        <span class="">Avg Response Time (ms)</span>
                    </span>
    
                </ng-template>
                <ng-template pTemplate="body" let-col let-appInfo="rowData">
                 {{getCommaSeparatedString(appInfo[col.field])}}
		</ng-template>
            </p-column> -->
            <ng-template pTemplate="header">
                    <tr>
                        <th>
                            <span>
                                <!-- <img src="./images/icon.jpg" style="width:16px;"> -->
                                <span>Top 10 {{typeStr}}</span>
                            </span>
                        </th>
                        <th [style]=" {'width': '8vh'}">
                            <span>
                                <img src="./images/page_legend.png" alt="apps">
                                <!-- <span class="">TPS</span> -->
                            </span>
                        </th>
                        <th [style]=" {'width': '8vh'}">
                            <span>
                                <img src="./images/response_legend.png" alt="apps">
                                <!-- <span class="">Avg Response Time (ms)</span> -->
                            </span>
                        </th>
                    </tr>
            </ng-template>
            <ng-template pTemplate="body" let-row >
                    <tr>
                        <td>
                            <span style="cursor:pointer; color:#995088" (click)='showBTDialoge(row)'>
                                {{row[objectKeys.btname]}}
                            </span>
                        </td>
                        <td>
                            {{getCommaSeparatedString(row[objectKeys.tps])}}
                        </td>
                        <td>
                            {{getCommaSeparatedString(row[objectKeys.avg])}}
                        </td>
                    </tr>
                </ng-template>
        </p-table>
    </div>
   
   <!-- for manage flowmaps -->
<p-dialog modal="modal" class="scenmodal" header="Manage FlowMaps" [(visible)]="_dataHandlerService.$manageFlowMaps"
    [width]="600" (onHide)="resetVariable()" (onShow)="setVariable()">
    <div class="set-default-flowmap">
        <label for="default-flowmap"><strong>Set Default Flowmap</strong></label>
        <div class="flowmaps">
            <div class="user-def-label ui-g-3" >
                User Default 
            </div>
            <div class="ui-g-3">
            <!-- <p-dropdown [options]="frontEndTierList" [(ngModel)]="selectedFETier" [autoWidth]="false" [style]="{'width': '100%'}"></p-dropdown> -->
                <p-dropdown [options]="_dataHandlerService.$flowmapList" class="dropDownFlowMap"
                    [(ngModel)]="defaultFlowmap" placeholder="Select a Flowmap" [autoWidth]="false"
                    [style]="{'width': '100%'}"></p-dropdown>
            </div>
        </div>
        <div class="flowmaps" *ngIf = "isAdminUser == 'true'">
            <div class="sys-def-label ui-g-3" >
                System Default 
            </div>
            <div class="ui-g-3">
                <p-dropdown [options]="_dataHandlerService.$flowmapList" class="dropDownFlowMap"
                    [(ngModel)]="systemDefaultFlowmap" placeholder="Select a Flowmap" [autoWidth]="false"
                    [style]="{'width': '100%'}"></p-dropdown>
            </div>
        </div>
        <div class="ui-g-1" style="float : left ; width: 10.3333% !important;">
            <button type="button" pButton (click)="setDefaultFlowMap()" label="Apply"></button>
        </div>
    </div>


    <div class="separator">
        <hr><br>
    </div>

    <div class="flowmapDataTable ui-g-12">
        <p-table [value]="_dataHandlerService.$flowMapJsonArr">
            <ng-template pTemplate="header">
                <tr>
                    <th style="width: 10%;">
                        <p-checkbox (onChange)="selectAll($event,_dataHandlerService.$flowMapJsonArr)"
                            [(ngModel)]="all_selected" binary="all_selected" value="all_selected">
                        </p-checkbox>
                    </th>
                    <th>FlowMap</th>
                    <th style="width: 15%;">Shared</th>
                    <th style="width: 15%;">Owner</th>
                </tr>
            </ng-template>
            <ng-template pTemplate="body" let-col let-size="rowData" let-rowIndex="rowIndex" let-modifiedDate="rowData">
                <tr>
                    <td style="text-align: center;">
                        <span
                            [ngClass]="_dataHandlerService.$flowMapJsonArr[rowIndex].owner ? 'normalClass':'disabledClass'">
                            <p-checkbox
                                (onChange)="rowSelection($event,_dataHandlerService.$flowMapJsonArr[rowIndex].name)"
                                [(ngModel)]="_dataHandlerService.$flowMapJsonArr[rowIndex].check"
                                binary="_dataHandlerService.$flowMapJsonArr[rowIndex]['check']"
                                value="_dataHandlerService.$flowMapJsonArr[rowIndex].check">
                            </p-checkbox>
                        </span>
                    </td>
                    <td style="text-align: left;">{{_dataHandlerService.$flowMapJsonArr[rowIndex].name}}</td>
                    <td style="text-align: center;">
                        <span [ngClass]="[_dataHandlerService.$flowMapJsonArr[rowIndex].owner ? 'normalClass' : 'disabledClass' , 
                        (_dataHandlerService.$systemFM == _dataHandlerService.$flowMapJsonArr[rowIndex].name) ? 'disabledClass' : 'normalClass' ]" >
                            <p-checkbox binary="_dataHandlerService.$sharedFlowMapList[rowIndex]['shared']"
                                (onChange)="getFlowmap($event,rowIndex)"
                                value="_dataHandlerService.$sharedFlowMapList[rowIndex].shared"
                                [(ngModel)]="_dataHandlerService.$sharedFlowMapList[rowIndex].shared">
                            </p-checkbox>
                        </span>
                    </td>
                    <td style="text-align: center;">
                        <span *ngIf="col.owner">
                            <i class="fa fa-check" aria-hidden="true"></i>
                        </span>
                    </td>
                </tr>
            </ng-template>  
        </p-table>
    </div>
    <p-footer>
    <button type="button" pButton icon="pi pi-times" (click)="_dataHandlerService.$manageFlowMaps = false" label="Cancel" style="float: right; margin-top: -3%; margin-left : 1%"></button>
    <button type="button" pButton icon="pi pi-check" (click)="removeFlowmap()" label="Remove" style="float: right; margin-top: -3%;"></button>	
    </p-footer>
</p-dialog>
    
    <!-- mapIntegration point -->
    <p-dialog modal="modal" class="scenmodal" header="Map Integration Point" [(visible)]="mapIntPointToggle" [width]="300">
        <div class="ui-grid ui-grid-responsive ui-grid-pad ui-fluid">
            <div class="ui-g borderClass" style="margin-bottom:10px">
                <div class="ui-g-12">
                    Actual Name: {{_dataHandlerService.$selectedMenuActualNameNode}}
                </div>
                <div class="ui-g-12">
                    Current Name: {{_dataHandlerService.$selectedMenuNode}}
                </div>
                <div class="ui-g-12">
                    <div class="ui-g-4">
                        New Name:
                    </div>
                    <div class="ui-g-8">
                        <p-dropdown [style]="{'width':'150px'}" [options]="mapIntPtTiers" appendTo="body" [(ngModel)]="selectedNewName"
                            placeholder="Select a Name" optionLabel="label" [showClear]="true"></p-dropdown>
                    </div>
                </div>
            </div>
        </div>
        <p-footer>
            <button type="button" pButton icon="pi pi-check" (click)="renameMapIntPoint(_dataHandlerService.$selectedMenuActualNameNode, selectedNewName)" label="Apply"></button>
            <button type="button" pButton icon="fa fa-times" (click)="mapIntPointToggle=false" label="Close"></button>
        </p-footer>
    </p-dialog>
    
    
    <!-- Creating dialog for renaming flowMap -->
    <p-dialog modal="modal" class="scenmodal" header="Rename FlowMap" [(visible)]="_dataHandlerService.$renameFlowMap" [width]="300">
        <div class="ui-grid ui-grid-responsive ui-grid-pad ui-fluid">
            <div class="ui-g borderClass" style="margin-bottom:10px">
                <div class="ui-g-12">
                    <div class="ui-g-4">
                        Old Name:
                    </div>
                    <div class="ui-g-8">
                        {{_dataHandlerService.$oldFmap}}
                    </div>
                </div>
                <div class="ui-g-12">
                    <div class="ui-g-4">
                        New Name:
                    </div>
                    <div class="ui-g-8">
                        <input pInputText type="text" [(ngModel)]="_dataHandlerService.$newFlowMapName" />
                    </div>
                </div>
            </div>
        </div>
        <p-footer>
            <button type="button" pButton icon="pi pi-check" (click)="renameFMap()" label="Save"></button>
            <button type="button" pButton icon="pi pi-times" (click)="_dataHandlerService.$renameFlowMap = false" label="Cancel"></button>
        </p-footer>
    </p-dialog>
    
    <!-- file upload feature -->
    
    <!-- Creating dialog for renaming flowMap -->
    <p-dialog modal="modal" class="scenmodal uploadTsImg back-upload" header="Change Icon" [(visible)]="_dataHandlerService.$changeIcon" [width]="620">
        <p-fileUpload class="back-upload" name="file" [url]="uploadUrl" #uploader accept="image/*" maxFileSize="1000000" (onSelect)="onSelectImage($event.files)"
            (onUpload)="onImageUpload($event)" (onError)="onError($event)">
        </p-fileUpload>
        <p-footer>
            <button type="button" pButton icon="fa fa-times" (click)="_dataHandlerService.$changeIcon = false" label="Close"></button>
        </p-footer>
    </p-dialog>
    
    <!-- Creating dialog for Business Transaction Details-->
    <p-dialog modal="modal" class="scenmodal uploadTsImg" header="Business Transaction Detail" [(visible)]="_tsCommonHandler.$showBTDialog"
        modal="modal" [resizable]='false' [width]="400">
        <p-dataTable [value]='btDetailArr'>
            <p-column field="propertyName" header="To 10 Transactions" [style]=" {'width': '40%','font-weight':'bold','font-size':'11px'}">
                <ng-template pTemplate="header">
    
                </ng-template>
                <ng-template pTemplate="body" let-col let-appInfo="rowData">
                    <span [title]="appInfo[col.field]">
                        {{appInfo[col.field]}}</span>
                </ng-template>
            </p-column>
            <p-column field="propertyValue" header="" [style]=" {'width': '60%','font-size':'11px'}">
                <ng-template pTemplate="header">
    
                </ng-template>
                <ng-template pTemplate="body" let-col let-appInfo="rowData">
                {{getCommaSeparatedString(appInfo[col.field])}}
		</ng-template>
            </p-column>
        </p-dataTable>
    </p-dialog>
    
    <p-dialog modal="modal" [header]="dialogHeader" [(visible)]="showDialog" [model]="true">
        <app-common-dialog [displayObject]="dialogPropertyObject">
        </app-common-dialog>
        <p-footer>
            <button type="button" pButton icon="pi pi-check" (click)="actionOnCommonDialog()" label="Save"></button>
            <button type="button" pButton icon="pi pi-times" (click)="closeCommonDialog()" label="Close"></button>
        </p-footer>
    </p-dialog>
    
    <p-dialog modal="modal" header="Rename Group" [(visible)]="showRenameGroup" model="true">
        <!-- <input type="text" pInputText [(ngModel)]="property"/> -->
        <span>
            New Group Name
        </span>
        <span>
            <input type="text" pInputText [(ngModel)]="renamedGroupName" />
        </span>
        <p-footer>
            <button type="button" pButton (click)="actionOnCommonDialog()" label="Save"></button>
            <button type="button" pButton (click)="closeCommonDialog()" label="Close"></button>
        </p-footer>
    </p-dialog>
    
    <p-dialog modal="modal" header="Delete Group" [(visible)]="showDeleteGroup" model="true">
        <span>
            Are you want to delete group {{_dataHandlerService.$selectedMenuNode}} ?
        </span>
        <p-footer>
            <button type="button" pButton (click)="action2DeleteGroup()" label="Save"></button>
            <button type="button" pButton (click)="closeDeleteDialog()" label="Close"></button>
        </p-footer>
    </p-dialog>
    
    
    
    <!-- Search By Code in HTML -->
    
    <p-dialog  header="Search FlowPath" *ngIf="searchByDialog" [(visible)]="searchByDialog" modal="modal" width="600" onHide="closeDialog()">
    <p-tabView>
        <!-- For Standard -->
       <p-tabPanel header="Standard">
    <form (ngSubmit)="searchBy('standard')" #groupForm="ngForm" ngNativeValidate>
        <div class="ui-g">
            <div class="ui-g-2">
                <label>Tier(s)</label>
            </div>
            <div class="ui-g-10">
                <p-multiSelect name="selectedtierList" [options]="tierListOption" [style]="{'min-width':'38.5%','max-width' : '100%'}"  [(ngModel)]="selectedtierList" appendTo='body' ngModel></p-multiSelect>
            </div>
        </div>
        <div class="ui-g">
            <div class="ui-g-2">
                <label>Correlation ID</label>
            </div>
            <div class="ui-g-4">
                <p-chips name="correlationID" [addOnTab]='true' [addOnBlur]='true' [(ngModel)]="correlationID" class="chips-box"></p-chips>
            </div>
            <div class="ui-g-1">
                <label>Mode</label>
            </div>
            <div class="ui-g-4">
                    <input name="mode" *ngIf="flowpathID == ''" type="text" class='hidden-validator' pInputText
                    [(ngModel)]="mode" required ngModel />
                <p-dropdown  name="type" [options]="modeList"  [(ngModel)]="mode" placeholder="--Select Mode--" appendTo='body'  ngModel></p-dropdown>
            </div>
        </div>
        <div class="ui-g">
            <div class="ui-g-2">
                <label>FlowPath ID</label>
            </div>
            <div class="ui-g-4">
                <input name="flowpathID" type="text" pInputText [(ngModel)]="flowpathID" ngModel />
            </div>
        </div>
        <div class="ui-g" style="float: right">
            <button type="submit" pButton label="Search"></button>
            <button type="button" pButton (click)="closeSearchByDialog()" label="Close"></button>
    </div>
    </form>
    </p-tabPanel>
    <!-- For Custom -->
    <p-tabPanel header="Custom">
            <div class="ui-g">
                    <div class="ui-g-12">
                            <div class="ui-g-2">
                                <label>Tier(s)</label>
                            </div>
                            <div class="ui-g-10">
                                <p-multiSelect name="selectedtierList" [options]="tierListOption" [style]="{'min-width':'38.5%','max-width' : '100%'}"  [(ngModel)]="selectedtierListForCustom" appendTo='body' ngModel></p-multiSelect>
                            </div>
                        </div>
                    <form (ngSubmit)="saveCustomRules()"  #groupForm="ngForm" ngNativeValidate>
                    <div class="ui-g-12">
                        <div class="ui-g-4">
                                <input name="name" type="text" class='hidden-validator' pInputText
                                [(ngModel)]="customDetail.name" required ngModel />
                            <p-dropdown name="name" [options]="customNameList"
                                [(ngModel)]="customDetail.name" placeholder="--Select Name--" appendTo="body"></p-dropdown>
                        </div>
                        <div class="ui-g-4">
                            <input name="operationName" type="text" class='hidden-validator' pInputText
                                [(ngModel)]="customDetail.operationName" required ngModel />
                            <p-dropdown name="operationName" [options]="operationList"
                                [(ngModel)]="customDetail.operationName" placeholder="--Select Operation--" appendTo="body"></p-dropdown>
                        </div>
                        <div class="ui-g-3">
                            <input name="value" type="text" placeholder="Value" pInputText
                                [(ngModel)]="customDetail.value"
                                (keydown.space)="$event.preventDefault()" style="max-width : 90%" required ngModel />
                        </div>
                        <div class="ui-g-1">
                            <button type="submit" pButton icon="fa fa-plus"></button>
                        </div>
                    </div>
                    </form>
                    <p-dataTable class="nde-ui" [value]="customRulesData"
                        [(selection)]="selectedCustomRules" [rows]="4 " [paginator]="customRulesData?.length> 4"
                        [pageLinks]="4">
                        <p-header>
                            <span style="float: left;"> Custom Rule(s) </span>
                            <span style="float: right;margin-top:-3px">
                                <button pButton type="button" class="ui-button-danger"
                                    title="Delete selected rule(s)" (click)="deleteCustomRules()"
                                    icon="fa fa-trash"></button>
                            </span>
                        </p-header>
                        <p-column [style]="{'width':'38px'}" selectionMode="multiple"></p-column>
                        <p-column class="col-overflow" field="name" header="Name" [sortable]="true">
                            <ng-template let-col let-customRule="rowData">
                                <span title="{{customRule[col.field]}}">{{customRule[col.field]}}</span>
                            </ng-template>
                        </p-column>
                        <p-column class="col-overflow" field="operationName" header="Operation" [sortable]="true">
                            <ng-template let-col let-customRule="rowData">
                                <span title="{{customRule[col.field]}}">{{customRule[col.field]}}</span>
                            </ng-template>
                        </p-column>
                        <p-column class="col-overflow" field="value" header="Value" [sortable]="true">
                            <ng-template let-col let-customRule="rowData">
                                <span title="{{customRule[col.field]}}">{{customRule[col.field]}}</span>
                            </ng-template>
                        </p-column>
                    </p-dataTable>
                </div>
            <div class="ui-g" style="float: right">           
                    <button type="button" pButton (click)="searchBy('custom')" label="Search"></button>
                    <button type="button" pButton (click)="closeSearchByDialog()" label="Close"></button>
            </div>
    </p-tabPanel>
    <!-- For Logs -->
    <p-tabPanel header="Logs">
            <form (ngSubmit)="searchBy('logs')" #groupForm="ngForm" ngNativeValidate>
            <div class="ui-g">
                    <div class="ui-g-12">
                            <div class="ui-g-2">
                                <label>Tier(s)</label>
                            </div>
                            <div class="ui-g-10">
                                <p-multiSelect name="selectedtierList" [options]="tierListOption" [style]="{'min-width':'38.5%','max-width' : '100%'}"  [(ngModel)]="selectedtierListForLogs" appendTo='body' ngModel></p-multiSelect>
                            </div>
                        </div>
            </div> 
            <div class="ui-g">
                    <div class="ui-g-2">
                        <label>Correlation ID</label>
                    </div>
                    <div class="ui-g-4">
                        <input name="correlationIDForLogs" type="text" pInputText [(ngModel)]="correlationIDForLogs" required ngModel />
                    </div>
                </div>
                <div class="ui-g">
                        <div class="ui-g-2">
                            <label>FlowPath ID</label>
                        </div>
                        <div class="ui-g-4">
                            <input name="flowpathIDForLogs" type="number" pInputText min="0" [(ngModel)]="flowpathIDForLogs" required ngModel />
                        </div>
                    </div>
                    <div class="ui-g">
                            <div class="ui-g-2">
                                <label>Pattern</label>
                            </div>
                            <div class="ui-g-4">
                                <input name="pattern" type="text" pInputText [(ngModel)]="pattern" required ngModel />
                            </div>
                        </div>
        <div class="ui-g" style="float: right">
                <button type="submit" pButton label="Search"></button>
                <button type="button" pButton (click)="closeSearchByDialog()" label="Close"></button>
        </div>
        </form>
    </p-tabPanel>
    
    </p-tabView>
    </p-dialog>
   <p-confirmDialog [transitionOptions]="'0ms'"></p-confirmDialog>
<!-- Legend -->
   <label type="text" label="Legend" (click)="op2.show($event)" class = "legend_txt">Legend</label>
   <p-overlayPanel #op2 class="overlayPanel-tierStatus" >
        <span *ngFor="let val of _dataHandlerService.$legendMetrices; let i = index" 
                        [className]="_dataHandlerService.$legendMetrices[i]['metrics']? 'ts-enabled-metrics' : 'ts-disabled-metrics'">
                    <img [src]=val.src>
                </span>
    </p-overlayPanel>
<!-- Dialog to open Undo renaming -->
<p-dialog modal="modal" class="scenmodal" header="Reset Integration Point Names" [(visible)]="isUndoRenamingDialog"
    [width]="600">
    <form (ngSubmit)="saveUndoIPNames()" #groupForm="ngForm" ngNativeValidate>
        <div class="ui-g">
            Select Integration Point Names to reset 
            <p-dataTable [value]='renamedIPArr' [(selection)]="selectedIP">
                <p-column [style]="{'width':'20px'}" selectionMode="multiple"></p-column>
                <p-column field="propertyValue" header="Current Name" [style]=" {'width': '35%','font-size':'11px'}">
                    <ng-template let-col let-ip="rowData" pTemplate>
                        <span>{{ip[col.field]}}</span>
                    </ng-template>
                </p-column>
                <p-column field="propertyName" header="Actual Name" [style]=" {'width': '55%','font-size':'11px'}">
                    <ng-template let-col let-ip="rowData" pTemplate>
                        <span>{{ip[col.field]}}</span>
                    </ng-template>
                </p-column>

            </p-dataTable>
        </div>
        <div class="ui-g" style="float: right">
            <button type="submit" pButton icon="pi pi-check" label="Reset"></button>
            <button type="button" pButton icon="fa fa-times" (click)="isUndoRenamingDialog=false"
                label="Cancel"></button>
        </div>
    </form>
</p-dialog>

    <!-- Template for Renaming of Multiple End Points-->
    <p-dialog modal="modal" class="scenmodal" header="Rename multiple Integration Point(s)" [(visible)]="isRenameEndPoints" [width]="600">
            <div class="ui-g-12">
                    <p-pickList [responsive]="true" [metaKeySelection]="false" [showTargetControls]="false"
                        [showSourceControls]="false" [source]="listOfEndPoints" [target]="listOfRenameEndPoints" 
                        sourceHeader="Available Integration Points" targetHeader="Integration Points to be renamed" 
                        class="config-ts-picklist">
                        <ng-template let-item pTemplate="item">
                            <div class="ui-helper-clearfix">
                                {{item}}
                            </div>
                        </ng-template>
                    </p-pickList>
        </div>
        <div class="ui-g-12">
            <div class="ui-g-7">
                <label>
                    Rename above selected Integration Point(s) with new name
                </label>
            </div>
            <div class="ui-g-5">
                    <input pInputText type="text" placeholder="Enter new name" pattern="^[a-zA-Z0-9_#@.-]{0,99}$" (keydown.space)="$event.preventDefault()" [(ngModel)]="commonEndPointName" />
            </div>
        </div>
        <p-footer>
                <button type="button" pButton icon="pi pi-check" (click)="applyRenameEndPoints()" label="Apply"></button>
                <button type="button" pButton icon="pi pi-times" (click)="isRenameEndPoints = false" label="Cancel"></button>
            </p-footer>
    </p-dialog>

     <!-- Show Tier Info -->
     <p-dialog modal="modal" class="scenmodal show-tier-info" [modal]="true" [responsive]="true" header="Tier Info" [(visible)]="tierInfoToggle" [width]="820" closeOnEscape="true" [positionTop]=60>

          <button type="button" class="tab-btn" (click)="clickEvent()" [ngClass]="tabpanelBtn ? 'sh' : 'current'">
             <i class="fa fa-pie-chart"></i> Overview</button>
          <button type="button" class="tab-btn" (click)="clickEvent()"  [ngClass]="tabpanelBtn ? 'current' : 'sh'">
             <i class="fa fa-line-chart"></i> Health</button>
          <hr class="btnHR">
          
    <div class="tabbox" [ngClass]="tabpanel ? 'tabbox' : 'tabbox-show'">
    <div class="cav-d-flex cav-flex-wrap cav-align-content-stretch ui-g" *ngFor="let chart of chartsData; let i = index;">
        <div class="ui-g-4 cav-px-0"> 
    <div class="bg-gray cav-p-1 cav-h-100">
        <p class="cav-fnt-weight600 cav-mt-0 cav-mb-2 cav-text-center">Tier : {{chart[1].series[0].name}}</p>
        <exec-dashboard-hchart [options]="chart[0]"></exec-dashboard-hchart>
    </div>
    </div>

    <div class="ui-g-8">
        <div class=" cav-p-1 line-graph">
            
            <div class="cav-my-1"><exec-dashboard-hchart [options]="chart[1]"></exec-dashboard-hchart></div>
            <div class="cav-my-1"><exec-dashboard-hchart [options]="chart[2]"></exec-dashboard-hchart></div>
            <div class="cav-my-1"><exec-dashboard-hchart [options]="chart[3]"></exec-dashboard-hchart></div>
        </div>
    </div>
</div>
</div>


          <div class="tabbox"  [ngClass]="tabpanel ? 'tabbox-show' : 'tabbox'" style="height: 442px; overflow: auto;" >
            <div class="cav-d-flex cav-justify-content-center cav-align-items-center">
                <div class="cav-p-2 bdr"> 
                    <img src="../dashboard/images/tier.png" class="img-mx">Tier
                    <img src="../dashboard/images/server.png" class="img-mx">Server
                    <img src="../dashboard/images/Default__Image.png" class="img-mx">{{entityLevel}}
                </div>
                <div class="cav-p-2 bdr">
                    <ul class="cav-d-flex cav-p-0 cav-m-0">
                        <li class="normal">Normal</li>
                        <li class="major">Major</li>
                        <li class="critical">Critical</li>
                    </ul>
                
                    

                </div>
               
                </div>
        <div>
            <div class="tier-info-health-tab cav-p-1">
                <!-- this div will be iterated multiple times -->
                <div *ngFor="let tierInfo of serverInfo" class="server-info cav-p-2">
        <p class="cav-text-center"><img alt="Tier" src="../dashboard/images/tier.png" class="img-mx">{{tierInfo.name}}</p>

        <div class="layoutmasonry">
                    <div class="card" *ngFor="let server of tierInfo.servers">
                        <div style="border-bottom: 1px solid #ccc;">
                            <div class="instance-name cav-mb-2" [tooltipDisabled]="disbleTooltip"  pTooltip="{{server.name}}" tooltipPosition="top" placeholder="Top">
                                <img alt="server" src="../dashboard/images/server.png" class="img-mx"> 
                             {{server.name}}
                            </div>
                            <!-- <image xlink:href="./images/page_legend.png" [attr.x]="90" [attr.y]="33" dominant-baseline="central" height="13px"
                                width="13px" /> -->
                            <div>
                                
                                <div class="cav-d-flex cav-justify-content-center cav-my-1">
                                    <div class="cav-mx-1">
                                        <i class="fa fa-square" style="color:#53d8ad"></i> 100%
                                </div>
                                <div class="cav-mx-1">
                                        <i class="fa fa-square" style="color:#ffc247"></i> 0%
                                    </div>
                                    <div class="cav-mx-1">
                                        <i class="fa fa-square" style="color:#f55e5e"></i> 0%
                                    </div>

                                </div>
                            </div>

                        </div>
                        <!-- {{server}} -->
                        <div *ngFor="let instance of server.instances">
                            <a (click)="getInstanceFlowMap(tierInfo.name, server.name,instance, _selectedDC);"  class="cav-d-flex cav-justify-content-center aHover" [tooltipDisabled]="disbleTooltip"  pTooltip="{{instance.name.split('_')[0]}}" tooltipPosition="top" placeholder="Top">
                                <div class="cav-mx-1">
                                    <img alt="instance" src="../dashboard/images/{{instance.icon}}" style="width:16px;height:16px">
                                </div>
                                <div class="cav-mx-1 instance-name">
                                {{instance.name.split("$$")[0]}}
                                </div>
                            </a>
                            
                            <!-- <image xlink:href="./images/page_legend.png" [attr.x]="90" [attr.y]="33" dominant-baseline="central" height="13px"
                                width="13px" /> -->
                            <div >
                                
                                <div class="cav-d-flex cav-justify-content-center cav-mt-1 cav-mb-2">
                                    <div class="cav-mx-1">
                                        <i class="fa fa-square" style="color:#53d8ad"></i> 100%
                                    </div>
                                    <div class="cav-mx-1">
                                        <i class="fa fa-square" style="color:#ffc247"></i> 0%
                                    </div>
                                    <div class="cav-mx-1">
                                        <i class="fa fa-square" style="color:#f55e5e"></i> 0%
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    </div>

                </div>
                <!-- End of div -->
            </div>
        </div>
          </div>
    </p-dialog>
